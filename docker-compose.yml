version: '3.7'
services:
##Option 2 – Storing MySQL Data on Host Machine
##Option 1 – Storing MySQL Data on Docker containers but as persistent volume DB 
  mysqlcontainername:
    image: mysql:8
    container_name: mysqlcontainername
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: movie-info   
    ports:
      - "3306:3306"
    networks:
      - springboot-mysql
    volumes:
      - 'persistent-volume-mysql:/var/lib/mysql'

  moviecatalogcontainername:
    image: nitinmanojkumar/movie-catalog:latest
    container_name: movie-catalog
    ports:
      - 7777:7777
    networks:
      - springboot-mysql
    depends_on:
      - mysqlcontainername
      - movieinfocontainername
      - movieratingcontainername
    command: sh -c './wait-for mysqlcontainername:3306 -- npm start'
    
  movieinfocontainername:
    image: nitinmanojkumar/movie-info:latest
    container_name: movie-info
    ports:
      - 7778:7778
    networks:
      - springboot-mysql
    depends_on:
      - mysqlcontainername
    command: sh -c './wait-for mysqlcontainername:3306 -- npm start'

  movieratingcontainername:
    image: nitinmanojkumar/movie-rating:latest
    container_name: movie-rating
    ports:
      - 7779:7779
    networks:
      - springboot-mysql
    depends_on:
      - mysqlcontainername
    command: sh -c './wait-for mysqlcontainername:3306 -- npm start'
    
  booklibrarycontainername:
    image: nitinmanojkumar/spring-boot-library-microservice:latest
    container_name: booklibrarycontainer
    ports:
      - 7776:7776
    networks:
      - springboot-mysql
    depends_on:
      - mysqlcontainername
    command: sh -c './wait-for mysqlcontainername:3306 -- npm start'
    
volumes:
  persistent-volume-mysql:
    external: true

networks:
    springboot-mysql:
        driver: bridge
