1. Pull MySQL server Docker image
docker pull mysql/mysql-server:8
docker pull mysql:8

2. Create docker volume and specify the location to be stored in the host, the name of the docker volume container and image to which the volume to be used for
3. Create the container in the port providing the username and pwd as entry points
docker create -v {source/host path}:{destination/path in the container}C:/PersistentVolume/hostmachine:/var/lib/mysql --name mysqldata_as_volumne_in_host mysql/mysql-server:8
For Non Persistent DB use below:
docker run -p 3306:3306 -d --cap-add=sys_nice --security-opt seccomp=unconfined --network springboot-mysql -e MYSQL_ROOT_PASSWORD=root -v persistent-volume-mysql:/var/lib/mysql --name mysqlservercontainername mysql/mysql-server:8

docker create -v {source/host path}:{destination/path in the container}C:/PersistentVolume/hostmachine:/var/lib/mysql --name mysqldata_as_volumne_in_host_notserver mysql:8
For Persistent DB use below:
docker run -p 3306:3306 -d --cap-add=sys_nice --security-opt seccomp=unconfined --network springboot-mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=movieinfo -v persistent-volume-mysql:/var/lib/mysql --name mysqlcontainername mysql:8

4. Open mysql container in bash
docker exec -it mysqlcontainername bash
Inside the mysql bash:
	mysql -uroot -proot
	create database movieinfo;
	show databases;
	use movieinfo;
	use movieinfo;
	drop table movieinfo.newmovielist;
	CREATE TABLE movieinfo.newmovielist (
		movieid varchar(255) primary key,
		moviedesc varchar(255),
		moviename varchar(255) not null
	);

	insert into movieinfo.newmovielist(movieid,moviedesc,moviename) values(LOWER('avengers1'),'The Avengers, is a 2012 American superhero film based on the Marvel Comics superhero team of the same name.','The Avengers');
	insert into movieinfo.newmovielist(movieid,moviedesc,moviename) values(LOWER('avengers2'),'Age of Ultron is a 2015 American superhero film based on the Marvel Comics superhero team the Avengers','Avengers: Age of Ultron');
	insert into movieinfo.newmovielist(movieid,moviedesc,moviename) values(LOWER('harrypotter2'),'An ancient prophecy seems to be coming true when a mysterious presence begins stalking the corridors of a school of magic and leaving its victims paralyzed.','Harry Potter and the Chamber of Secrets');
	insert into movieinfo.newmovielist(movieid,moviedesc,moviename) values(LOWER('harrypotter3'),'Harry Potter, Ron and Hermione return to Hogwarts School of Witchcraft and Wizardry for their third year of study, where they delve into the mystery','Harry Potter and the Prisoner of Azkaban');
	insert into movieinfo.newmovielist(movieid,moviedesc,moviename) values(LOWER('jumanji2'),'A team of friends return to Jumanji to rescue one of their own but discover that.','Jumanji: The Next Level');
	insert into movieinfo.newmovielist(movieid,moviedesc,moviename) values(LOWER('spiderman3'),'Spider-Man 3 is a 2007 American superhero film based on the Marvel Comics character Spider-Man.','Spider-Man™ 3');

5. Run the spring boot project jar image as container
docker run -p 7776:7776 -d --network springboot-mysql --name springbootcontainername spring-boot-library-microservice	
	
Inshort:
docker network create springboot-mysql
docker pull mysql:8

docker volume create persistent-volume-mysql
For Non Persistent DB use below:
docker run -p 3306:3306 -d --cap-add=sys_nice --security-opt seccomp=unconfined --network springboot-mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=movieinfo -v persistent-volume-mysql:/var/lib/mysql --name mysqlcontainername mysql:8
(OR)
docker volume create persistent-volume-mysql
For Persistent DB use below:
docker run -p 3306:3306 -d --network springboot-mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=movieinfo -v persistent-volume-mysql:/var/lib/mysql --name mysqlcontainername mysql:8

docker exec -it mysqlcontainername bash
	mysql -uroot -proot
	create database movieinfo;
	show databases;
	use movieinfo;
	use movieinfo;
	drop table movieinfo.newmovielist;
	CREATE TABLE movieinfo.newmovielist (
		movieid varchar(255) primary key,
		moviedesc varchar(255),
		moviename varchar(255) not null
	);

	insert into movieinfo.newmovielist(movieid,moviedesc,moviename) values(LOWER('avengers1'),'The Avengers, is a 2012 American superhero film based on the Marvel Comics superhero team of the same name.','The Avengers');
	insert into movieinfo.newmovielist(movieid,moviedesc,moviename) values(LOWER('avengers2'),'Age of Ultron is a 2015 American superhero film based on the Marvel Comics superhero team the Avengers','Avengers: Age of Ultron');
	insert into movieinfo.newmovielist(movieid,moviedesc,moviename) values(LOWER('harrypotter2'),'An ancient prophecy seems to be coming true when a mysterious presence begins stalking the corridors of a school of magic and leaving its victims paralyzed.','Harry Potter and the Chamber of Secrets');
	insert into movieinfo.newmovielist(movieid,moviedesc,moviename) values(LOWER('harrypotter3'),'Harry Potter, Ron and Hermione return to Hogwarts School of Witchcraft and Wizardry for their third year of study, where they delve into the mystery','Harry Potter and the Prisoner of Azkaban');
	insert into movieinfo.newmovielist(movieid,moviedesc,moviename) values(LOWER('jumanji2'),'A team of friends return to Jumanji to rescue one of their own but discover that.','Jumanji: The Next Level');
	insert into movieinfo.newmovielist(movieid,moviedesc,moviename) values(LOWER('spiderman3'),'Spider-Man 3 is a 2007 American superhero film based on the Marvel Comics character Spider-Man.','Spider-Man™ 3');
docker run -p 7776:7776 -d --network springboot-mysql --name springbootcontainername nitinmanojkumar/spring-boot-library-microservice
<<<<<<< HEAD

StartCouchbase:
docker volume create persistent-volume-couchbase
docker run -p 8091:8091 -d --network springboot-mysql --name couchbasecontainername -v persistent-volume-couchbase:/opt/couchbase/var couchbase:latest
docker run -p 8091-8094:8091-8094 -p 11210:11210 -d --network springboot-mysql --name couchbasecontainername -v persistent-volume-couchbase:/opt/couchbase/var couchbase:7.0.2
docker run -p 8091-8094:8091-8094 -p 11210:11210 -d --network springboot-mysql --name couchbasecontainername -v persistent-volume-couchbase:/opt/couchbase/var couchbase
=======
docker run -d -p 8090:8080 --name tomcatcontainer --network springboot-mysql nitinmanojkumar/tomcat-hello-world-image:latest
>>>>>>> 41d4956dc7baafb0523e3872ae36e6fa5c78d439
