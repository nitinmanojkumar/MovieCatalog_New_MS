version: '3.7'
services:
##Option 2 – Storing MySQL Data on Host Machine
  mysqlcontainername:
    image: mysql:8
    container_name: mysqlcontainername
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: movieinfo 
    ports:
      - "3306:3306"
    networks:
      - springboot-mysql
    volumes:
      - C:\PersistentVolume\movieinfo:/var/lib/mysql
##Option 1 – Storing MySQL Data on Docker containers but as persistent volume DB 
  # mysqlcontainername:
    # image: mysql:8
    # container_name: mysqlcontainername
    # ports:
      # - 3306:3306
    # volumes:
      # - persistent-volume-mysql:/var/lib/mysql
    # networks:
      # - springboot-mysql
    # environment:
      # MYSQL_ROOT_USER: root
      # MYSQL_ROOT_PASSWORD: root
      # MYSQL_PASSWORD: root
      # MYSQL_DATABASE: movie-info      

  moviecatalogcontainername:
    image: nitinmanojkumar/movie-catalog:latest
    container_name: movie-catalog
    ports:
      - 7777:7777
    networks:
      - springboot-mysql
    depends_on:
      - mysqlcontainername
    command: sh -c './wait-for mysqlcontainername:3306 -- npm start'
    
  movieinfocontainername:
    image: nitinmanojkumar/movie-info:latest
    container_name: movie-info
    ports:
      - 7778:7778
    networks:
      - springboot-mysql
    depends_on:
      - mysqlcontainername
    command: sh -c './wait-for mysqlcontainername:3306 -- npm start'

  movieratingcontainername:
    image: nitinmanojkumar/movie-rating:latest
    container_name: movie-rating
    ports:
      - 7779:7779
    networks:
      - springboot-mysql
    depends_on:
      - mysqlcontainername
    command: sh -c './wait-for mysqlcontainername:3306 -- npm start'
    
networks:
    springboot-mysql:
        driver: bridge
